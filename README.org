* Atreus Keyboard

The [[http://ergodox.org][Ergodox]] keyboard is an absolutely fantastic design; I use it every
day at my office. However, I like to work away from the office
frequently, and I thought I might try my hand at designing something a
little more portable. The great thing about assembling my Ergodox is
that it taught me there's really nothing magical about it; it's just a
piece of circuitry with a bunch of switches read by a microcontroller
that speaks the USB HID interface.

The Atreus is meant to be complementary to the Ergodox as something
smaller, cheaper, and more travel-friendly. The case measures 25x11cm
and lacks even a number row, relying heavily upon the fn key. There is
no PCB in this design, requiring [[http://wiki.geekhack.org/index.php?title=Hard-Wiring_How-To][a manual matrix wiring approach]].
However, given that there are only 4 rows and 11 columns, this isn't
as daunting as it could be.

I've seen a number of existing DIY 40% keyboard designs, but most of
them stagger the rows, which I find very annoying now that I've gotten
used to the columnar layout of the Ergodox. In addition, many of the
designs I've seen waste a lot of room on the space bar, failing to
take into account the fact that the thumb is the strongest and most
versatile of the fingers. This design avoids both these problems while
taking a more couch-friendly single-piece approach.

[[./atreus.jpg]]

Having so few keys, this board is pretty idiosyncratic. It works very
well for the kind of work that I do, but it probably wouldn't be a
good fit for you if you do a lot of numerical data entry or make heavy
use of function keys, arrows, or home/end. If you primarily use
[[https://github.com/technomancy/dotfiles/commit/856a638350a26b0cdb0bcc82042ed77a3fa4bdea][programs with good key rebinding functionality]], you're probably in
good shape. For instance, =enter= and =tab= are in a bit of an awkward
position, but many programs treat =control-m= and =control-i= as
=enter= and =tab= respectively.

** Layout

Only a handful of punctuation marks (and no digits) are available
unshifted, and all the modifiers are on the bottom row:

 :    '     ,     .     p     y       ||       f     g     c     r    l
 :    a     o     e     u     i       ||       d     h     t     n    s
 :    ;     q     j     k     x       ||       b     m     w     v    z
 :   esc   tab  super shift bksp ctrl || alt space  fn     -     /  enter

The numbers and most of the punctuation are on the fn layer with a
numpad-style arrangement under the right hand:

 :    !     @     {     }     |       ||     pgup    7     8     9    *
 :    #     $     (     )     `       ||     pgdn    4     5     6    +
 :    %     ^     [     ]     ~       ||       \     1     2     3    ?
 :  reset paste                       ||     hwdv          .     0    =

An alternate layout has the numbers in a more traditional row across the top:

 :    1     2     3     4    5        ||       6     7     8     9    0
 :    -     +     (     )    =        ||       .     [     ]     {    }
 :    !     @     #     $    %        ||       ^     &     *     ~    ?
 :  reset paste              `        ||     hwdv        pgup  pgdn   \

I type in Dvorak but prefer to do the remapping in software rather
than hardware so I don't have to change layouts when I switch to my
laptop's internal keyboard. However, the =hwdv= key switches it to
hardware Dvorak mode, which is useful for attaching to computers that
may not have software Dvorak set up. The =paste= key sends
shift+insert, while the =reset= button activates the bootloader,
allowing easy reprogramming without opening the case.

This is all a matter of firmware though; the layout is easy to change
after the fact.

** Parts

*** Switches

This layout has five modifiers and 37 non-modifiers.

I strongly prefer the feel and sound of tactile [[http://mechanicalkeyboards.com/shop/index.php?l=product_detail&p=651][Cherry MX blue]]
switches for typing. However, I like having linear [[http://mechanicalkeyboards.com/shop/index.php?l=product_detail&p=103][Cherry MX black
switches]] switches on the modifier keys (ctrl, alt, super, shift, and
fn) because the tactile effect has no benefit for keys that are held
down, and giving a different response helps you learn the layout more
quickly.

*** Diodes

In order to avoid ghosting, each switch needs a [[https://www.radioshack.com/product/index.jsp?productId=2062587][1N4148 diode]].

*** Microcontroller

A [[http://www.pjrc.com/teensy/index.html][Teensy 2]] is recommended. Be sure to get one without headers so it
will fit in between the bottom layer and the plate.

*** Keycaps

This [[http://keyshop.pimpmykeyboard.com/product/dsa-pbt-blank-sets][DSA-shaped base set]] (spherical indentations on the key, same
profile for each row) from Signature Plastics has 52 1x keys plus a
few extras we won't use. There are two "deep dish" keys in that set
which you can place under your index fingers on the home row to help
guide your hands to the right spot without looking. However, you only
get a single 1.5x keycap, and the middle two thumb keys both use them,
so you might want to pick up an extra. (You can buy a single DSA 1.5x
keycap from [[http://www.keycapsdirect.com/key-capsinventory.php][Signature Plastics]].)

** Case

Layered laser-cut wood or acrylic. The original case (=case-mk-i.svg=)
is slightly less wide and has a minor asymmetry with the screws on the
bottom side. The [[http://geekhack.org/index.php?topic%3D54759.msg1304117#msg1304117][mark II case]] (in the `case` directory) is implemented
programmatically in openscad, though dxf files are available as a
convenience, which can be converted to SVG or EPS for laser cutting
with Inkscape. Mark II features 8 screw holes and a kind of "stair
step" design around the top and bottom of the key clusters; mark I is
pictured below.

[[./layers.jpg]]

The bottom and top covers (black in the photo) should be cut in 3mm.
The switch plate (frosted in the photo) can be cut in 4.5mm or
3mm. The spacer should be cut in 6mm; it needs to be at least as
thick as the mini USB cable you connect to the microcontroller. I
recommend using a mini USB cable with as thin a connector as you can
find or sanding the connector down to the required thickness.

TODO: describe finishing process for wood.

** Firmware

The [[https://gitlab.com/technomancy/atreus-firmware/blob/master/readme.md][custom Atreus firmware]] is a small C project which
implements matrix scanning and debouncing with user-customizeable
layers and macro functions. Another option is the much more complex
TMK firmware. My [[https://github.com/technomancy/tmk_keyboard/tree/atreus][fork of the tmk firmware]] has support for the Atreus
layout. You should be able to change into the =keyboard/atreus=
directory and run =make KEYMAP=atreus= (or whichever variant you want)
to produce a qwerty =atreus.hex= file. You will probably want to
create your own layout once you've gotten a chance to try it and see
what works for you.

In either case you would use the =.hex= file produced with the [[http://www.pjrc.com/teensy/loader.html][teensy loader]] to upload to the microcontroller.

Once the firmware is loaded and the keyboard is assembled, pressing
the onboard reset button to update new versions of the firmware is
pretty cumbersome; instead use the "reset" button on the layout, which
has the same effect.

** Bill of Materials

- 50 MX Blue switches: $29.00 (mechanicalkeyboards.com)
- 50 diodes: $3.45 (radio shack, should be able to buy in-person)
- Base blank DSA keycap set: $21.00 (signatureplastics.com)
- Teensy 2: $16 (pjrc.com)
- Acrylic materials: ~$11, varies by source
- Acrylic laser cutting: 7.5 minutes at $3/min (varies by thickness of acrylic)

- 5 MX Black switches: $8.50 (optional)
- 5 MX Red switches: $10.00 (optional)
- additional 1.5x DSA keycap: $1 (optional)

- mechanicalkeyboards.com: free shipping in the US
- Signature Plastics (keycaps) US shipping: $8.00
- PJRC (teensy) shipping: $3.03

I haven't found a way to add the 1.5x keycap to an order of the DSA
base set, so you might be stuck paying Signature Plastics shipping
twice.

*** Other Tools

You'll need a soldering iron, solder, a glue gun, a multimeter, hookup
wire, wire strippers, and a USB Mini-B cable. You'll also need
eight M3 machine screws with nuts; the length of the screws depends on
the thickness of the acrylic you use. You can add rubber feet to the
bottom to prevent the board from sliding around when placed on a desk.

** Assembly

See the [[http://atreus.technomancy.us/assembly.pdf][assembly instructions]] PDF

** Inspiration

These fine projects all provided inspiration for various aspects of
the Atreus, as well as the folks on the =#geekhack= freenode channel.

- [[http://ergodox.org][Ergodox]]
- [[http://deskthority.net/workshop-f7/onehand-20-keyboard-t6617.html][OneHand]]
- [[http://blog.fsck.com/2013/12/better-and-better-keyboards.html][keyboard.io]]
- [[http://geekhack.org/index.php?topic=48718][ErgoT]]

** Builds

If you've built an Atreus, please let us know (pull request or
otherwise) and get your name and link added here:

- [[http://technomancy.us/173][Phil Hagelberg]]
- [[http://blog.tarn-vedra.de/2014/04/reproducing-keyboard-science_1707.html][Moritz Ulrich]]
- [[http://geekhack.org/index.php?topic=57007.0][Constantine]]
- [[http://blog.mattgauger.com/blog/2014/08/19/atreus-my-custom-keyboard/][Matt Gauger]]

** Orestes

A new [[https://www.flickr.com/photos/technomancy/14654421878][experimental build]] uses the [[http://pjrc.com/store/teensy31.html][Teensy 3]] microcontroller and
[[https://github.com/technomancy/orestes/tree/teensy3][Forth-based]] firmware, but this is not yet stable.

** License

Copyright Â© 2014 Phil Hagelberg and contributors

Released under the [[https://www.gnu.org/licenses/gpl.html][GNU GPL version 3]]
